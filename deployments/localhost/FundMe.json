{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__insufficientFunds",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FundMe__notOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "s_addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "s_funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x3afc527aa7770db864a04128b77300a3ae26997198bba1ac0e9cc682527cd1eb",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "1022488",
    "logsBloom": "0x
    "blockHash": "0x60a7302f83297ef728f39cb091b390fb5c62a7ed5fbc2cbf7b0760e61686ebdc",
    "transactionHash": "0x3afc527aa7770db864a04128b77300a3ae26997198bba1ac0e9cc682527cd1eb",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "1022488",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "6e8ce498d3a53c16a05cd9b1d9f7e678",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__insufficientFunds\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FundMe__notOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"s_addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// Get funds from users\\n// Withdraw funds\\n// Set a minimum funding value in USD\\n\\n// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__notOwner();\\nerror FundMe__insufficientFunds();\\n\\ncontract FundMe {\\n\\n    // msg.sender not available outside the function\\n\\n    using PriceConverter for uint256;\\n\\n    //State variables!\\n\\n    uint256 public constant MINIMUM_USD = 50*1e18; // constant saves gas\\n\\n    address[] public s_funders;\\n    mapping(address => uint256) public s_addressToAmountFunded;\\n\\n    address public immutable i_owner;\\n\\n    AggregatorV3Interface public s_priceFeed;\\n\\n    // constructor initializes the owner of the contract\\n    constructor (address priceFeedAddress) {\\n        i_owner = msg.sender; // like req.session.user = user authenticaton\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund () public payable fundController {\\n\\n        //require(msg.value.getConversionRate() >= MINIMUM_USD, \\\"Didn' send enough!\\\");\\n        // require(getConversionRate(msg.value) >= minimumUSD, \\\"Didn't send enough!\\\");\\n        s_funders.push(msg.sender);\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n        // 18 decimals in Wei\\n    }\\n\\n    function withdraw() public payable onlyOwner {\\n        // for loop\\n        for (uint256 funderIndex = 0; funderIndex < s_funders.length; funderIndex++) { // reads too much from storage causing a lot of gas\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        // reset the array\\n        s_funders = new address[](0);\\n        // actually withdraw the funds\\n\\n        //transfer\\n        // msg.sender = address\\n        // payable(msg.sender) = payable address --> you can only send eth with payable addresses\\n        //payable(msg.sender).transfer(address(this).balance); // this keyword means this contract\\n        \\n        //send\\n        //bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        //require(sendSuccess, \\\"Send failed.\\\");\\n        \\n        //call (The most optimal way)\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed.\\\");\\n\\n    }\\n\\n    function cheaperWithdraw() public payable onlyOwner {\\n\\n      address[] memory funders = s_funders; // writing the funders to memory once than reading from memory causing no gas\\n\\n      for (uint256 funderIndex = 0; funderIndex < funders.length; funderIndex++) { \\n        address funder = funders[funderIndex];\\n        s_addressToAmountFunded[funder] = 0;\\n      }\\n      s_funders = new address[](0);\\n\\n      (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n      require(success, \\\"Transfer failed.\\\");\\n    }\\n\\n    modifier onlyOwner {\\n        //require(msg.sender == i_owner, \\\"Authentication error: Sender is not the owner.\\\");\\n        if (msg.sender != i_owner) {\\n            revert FundMe__notOwner();\\n        }\\n        _;\\n    }\\n\\n    modifier fundController {\\n        if (msg.value.getConversionRate(s_priceFeed) < MINIMUM_USD) {\\n            revert FundMe__insufficientFunds();\\n        }\\n        _;\\n    }\\n\\n    // What happens if someone sends this contract ETH without using fund function\\n\\n    receive() external payable {\\n        fund();\\n    }\\n    \\n    fallback() external payable {\\n        fund();\\n    }\\n}\\n\",\"keccak256\":\"0x6ea69e30e18be39332537a2a9f099c7b573c4ff8f54c562d68fa4a8b88937567\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"\\n// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns(uint256) {\\n         \\n        (, int256 price,,,) = priceFeed.latestRoundData();\\n        // ETH in terms of USD\\n        // returns 8 decimals: 3000.00000000\\n        return uint256(price * 1e10); // returns 18 decimals\\n\\n    }\\n\\n    function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n\\n        return (ethAmount * ethPrice) / 1e18;\\n    } \\n\\n    // function getBTC_ETH(uint256 btcAmount) internal view returns (uint256) {\\n\\n    //     AggregatorV3Interface BTC_ETH = AggregatorV3Interface(0x779877A7B0D9E8603169DdbD7836e478b4624789);\\n\\n    //     (,int256 price,,,) = BTC_ETH.latestRoundData();\\n\\n    //     return (uint256(price) * btcAmount) / 1e8;\\n    // }\\n\\n}\\n\\n\",\"keccak256\":\"0x6bbb821af4a74d4ab836dccba61a4a70ecce163f1a6202469e5cd24c5a0ca0c9\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620012a9380380620012a98339818101604052810190620000379190620000cd565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600081519050620000c78162000138565b92915050565b600060208284031215620000e657620000e562000133565b5b6000620000f684828501620000b6565b91505092915050565b60006200010c8262000113565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6200014381620000ff565b81146200014f57600080fd5b50565b60805160601c6111236200018660003960008181610323015281816105af015281816107a5015261087301526111236000f3fe60806040526004361061007f5760003560e01c80636b69a5921161004e5780636b69a59214610147578063b60d428814610172578063be2693f01461017c578063dba6335f146101865761008e565b80630ec3b027146100985780631bf6132d146100c35780633ccfd60b1461010057806354861af71461010a5761008e565b3661008e5761008c6101b1565b005b6100966101b1565b005b3480156100a457600080fd5b506100ad6102e3565b6040516100ba9190610c16565b60405180910390f35b3480156100cf57600080fd5b506100ea60048036038101906100e59190610a7b565b610309565b6040516100f79190610c71565b60405180910390f35b610108610321565b005b34801561011657600080fd5b50610131600480360381019061012c9190610aa8565b610561565b60405161013e9190610bfb565b60405180910390f35b34801561015357600080fd5b5061015c6105a0565b6040516101699190610c71565b60405180910390f35b61017a6101b1565b005b6101846105ad565b005b34801561019257600080fd5b5061019b610871565b6040516101a89190610bfb565b60405180910390f35b6802b5e3af16b18800006101f0600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461089590919063ffffffff16565b1015610228576040517fe60e5d1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102da9190610ca8565b92505081905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60016020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103a6576040517f8186952400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156104515760008082815481106103cb576103ca610fd9565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061044990610f32565b9150506103a9565b50600067ffffffffffffffff81111561046d5761046c611008565b5b60405190808252806020026020018201604052801561049b5781602001602082028036833780820191505090505b50600090805190602001906104b192919061096b565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104d890610be6565b60006040518083038185875af1925050503d8060008114610515576040519150601f19603f3d011682016040523d82523d6000602084013e61051a565b606091505b505090508061055e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055590610c31565b60405180910390fd5b50565b6000818154811061057157600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610632576040517f8186952400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156106b557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161066b575b5050505050905060005b81518110156107405760008282815181106106dd576106dc610fd9565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061073890610f32565b9150506106bf565b50600067ffffffffffffffff81111561075c5761075b611008565b5b60405190808252806020026020018201604052801561078a5781602001602082028036833780820191505090505b50600090805190602001906107a092919061096b565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516107e790610be6565b60006040518083038185875af1925050503d8060008114610824576040519150601f19603f3d011682016040523d82523d6000602084013e610829565b606091505b505090508061086d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086490610c51565b60405180910390fd5b5050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000806108a1836108cb565b9050670de0b6b3a764000081856108b89190610e46565b6108c29190610cfe565b91505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561091457600080fd5b505afa158015610928573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061094c9190610ad5565b5050509150506402540be400816109639190610d2f565b915050919050565b8280548282559060005260206000209081019282156109e4579160200282015b828111156109e35782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061098b565b5b5090506109f191906109f5565b5090565b5b80821115610a0e5760008160009055506001016109f6565b5090565b600081359050610a2181611091565b92915050565b600081519050610a36816110a8565b92915050565b600081359050610a4b816110bf565b92915050565b600081519050610a60816110bf565b92915050565b600081519050610a75816110d6565b92915050565b600060208284031215610a9157610a90611037565b5b6000610a9f84828501610a12565b91505092915050565b600060208284031215610abe57610abd611037565b5b6000610acc84828501610a3c565b91505092915050565b600080600080600060a08688031215610af157610af0611037565b5b6000610aff88828901610a66565b9550506020610b1088828901610a27565b9450506040610b2188828901610a51565b9350506060610b3288828901610a51565b9250506080610b4388828901610a66565b9150509295509295909350565b610b5981610ea0565b82525050565b610b6881610efc565b82525050565b6000610b7b600c83610c97565b9150610b868261103c565b602082019050919050565b6000610b9e600083610c8c565b9150610ba982611065565b600082019050919050565b6000610bc1601083610c97565b9150610bcc82611068565b602082019050919050565b610be081610edc565b82525050565b6000610bf182610b91565b9150819050919050565b6000602082019050610c106000830184610b50565b92915050565b6000602082019050610c2b6000830184610b5f565b92915050565b60006020820190508181036000830152610c4a81610b6e565b9050919050565b60006020820190508181036000830152610c6a81610bb4565b9050919050565b6000602082019050610c866000830184610bd7565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610cb382610edc565b9150610cbe83610edc565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610cf357610cf2610f7b565b5b828201905092915050565b6000610d0982610edc565b9150610d1483610edc565b925082610d2457610d23610faa565b5b828204905092915050565b6000610d3a82610eb2565b9150610d4583610eb2565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d8457610d83610f7b565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610dc157610dc0610f7b565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610dfe57610dfd610f7b565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e3b57610e3a610f7b565b5b828202905092915050565b6000610e5182610edc565b9150610e5c83610edc565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e9557610e94610f7b565b5b828202905092915050565b6000610eab82610ebc565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610f0782610f0e565b9050919050565b6000610f1982610f20565b9050919050565b6000610f2b82610ebc565b9050919050565b6000610f3d82610edc565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610f7057610f6f610f7b565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f43616c6c206661696c65642e0000000000000000000000000000000000000000600082015250565b50565b7f5472616e73666572206661696c65642e00000000000000000000000000000000600082015250565b61109a81610ea0565b81146110a557600080fd5b50565b6110b181610eb2565b81146110bc57600080fd5b50565b6110c881610edc565b81146110d357600080fd5b50565b6110df81610ee6565b81146110ea57600080fd5b5056fea26469706673582212207330e1fe847967f5313868d358b6882055c7f7c99f0ea5f932599300658876c464736f6c63430008070033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c80636b69a5921161004e5780636b69a59214610147578063b60d428814610172578063be2693f01461017c578063dba6335f146101865761008e565b80630ec3b027146100985780631bf6132d146100c35780633ccfd60b1461010057806354861af71461010a5761008e565b3661008e5761008c6101b1565b005b6100966101b1565b005b3480156100a457600080fd5b506100ad6102e3565b6040516100ba9190610c16565b60405180910390f35b3480156100cf57600080fd5b506100ea60048036038101906100e59190610a7b565b610309565b6040516100f79190610c71565b60405180910390f35b610108610321565b005b34801561011657600080fd5b50610131600480360381019061012c9190610aa8565b610561565b60405161013e9190610bfb565b60405180910390f35b34801561015357600080fd5b5061015c6105a0565b6040516101699190610c71565b60405180910390f35b61017a6101b1565b005b6101846105ad565b005b34801561019257600080fd5b5061019b610871565b6040516101a89190610bfb565b60405180910390f35b6802b5e3af16b18800006101f0600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461089590919063ffffffff16565b1015610228576040517fe60e5d1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102da9190610ca8565b92505081905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60016020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103a6576040517f8186952400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156104515760008082815481106103cb576103ca610fd9565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061044990610f32565b9150506103a9565b50600067ffffffffffffffff81111561046d5761046c611008565b5b60405190808252806020026020018201604052801561049b5781602001602082028036833780820191505090505b50600090805190602001906104b192919061096b565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104d890610be6565b60006040518083038185875af1925050503d8060008114610515576040519150601f19603f3d011682016040523d82523d6000602084013e61051a565b606091505b505090508061055e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055590610c31565b60405180910390fd5b50565b6000818154811061057157600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610632576040517f8186952400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156106b557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161066b575b5050505050905060005b81518110156107405760008282815181106106dd576106dc610fd9565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061073890610f32565b9150506106bf565b50600067ffffffffffffffff81111561075c5761075b611008565b5b60405190808252806020026020018201604052801561078a5781602001602082028036833780820191505090505b50600090805190602001906107a092919061096b565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516107e790610be6565b60006040518083038185875af1925050503d8060008114610824576040519150601f19603f3d011682016040523d82523d6000602084013e610829565b606091505b505090508061086d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086490610c51565b60405180910390fd5b5050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000806108a1836108cb565b9050670de0b6b3a764000081856108b89190610e46565b6108c29190610cfe565b91505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561091457600080fd5b505afa158015610928573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061094c9190610ad5565b5050509150506402540be400816109639190610d2f565b915050919050565b8280548282559060005260206000209081019282156109e4579160200282015b828111156109e35782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061098b565b5b5090506109f191906109f5565b5090565b5b80821115610a0e5760008160009055506001016109f6565b5090565b600081359050610a2181611091565b92915050565b600081519050610a36816110a8565b92915050565b600081359050610a4b816110bf565b92915050565b600081519050610a60816110bf565b92915050565b600081519050610a75816110d6565b92915050565b600060208284031215610a9157610a90611037565b5b6000610a9f84828501610a12565b91505092915050565b600060208284031215610abe57610abd611037565b5b6000610acc84828501610a3c565b91505092915050565b600080600080600060a08688031215610af157610af0611037565b5b6000610aff88828901610a66565b9550506020610b1088828901610a27565b9450506040610b2188828901610a51565b9350506060610b3288828901610a51565b9250506080610b4388828901610a66565b9150509295509295909350565b610b5981610ea0565b82525050565b610b6881610efc565b82525050565b6000610b7b600c83610c97565b9150610b868261103c565b602082019050919050565b6000610b9e600083610c8c565b9150610ba982611065565b600082019050919050565b6000610bc1601083610c97565b9150610bcc82611068565b602082019050919050565b610be081610edc565b82525050565b6000610bf182610b91565b9150819050919050565b6000602082019050610c106000830184610b50565b92915050565b6000602082019050610c2b6000830184610b5f565b92915050565b60006020820190508181036000830152610c4a81610b6e565b9050919050565b60006020820190508181036000830152610c6a81610bb4565b9050919050565b6000602082019050610c866000830184610bd7565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610cb382610edc565b9150610cbe83610edc565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610cf357610cf2610f7b565b5b828201905092915050565b6000610d0982610edc565b9150610d1483610edc565b925082610d2457610d23610faa565b5b828204905092915050565b6000610d3a82610eb2565b9150610d4583610eb2565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d8457610d83610f7b565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610dc157610dc0610f7b565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610dfe57610dfd610f7b565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e3b57610e3a610f7b565b5b828202905092915050565b6000610e5182610edc565b9150610e5c83610edc565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e9557610e94610f7b565b5b828202905092915050565b6000610eab82610ebc565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610f0782610f0e565b9050919050565b6000610f1982610f20565b9050919050565b6000610f2b82610ebc565b9050919050565b6000610f3d82610edc565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610f7057610f6f610f7b565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f43616c6c206661696c65642e0000000000000000000000000000000000000000600082015250565b50565b7f5472616e73666572206661696c65642e00000000000000000000000000000000600082015250565b61109a81610ea0565b81146110a557600080fd5b50565b6110b181610eb2565b81146110bc57600080fd5b50565b6110c881610edc565b81146110d357600080fd5b50565b6110df81610ee6565b81146110ea57600080fd5b5056fea26469706673582212207330e1fe847967f5313868d358b6882055c7f7c99f0ea5f932599300658876c464736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 63,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 67,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 72,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}